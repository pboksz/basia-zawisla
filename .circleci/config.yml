version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.4-node-browsers
      environment:
        RAILS_ENV: test
    - image: circleci/mysql:5.6-ram
      environment:
        MYSQL_DATABASE: basia_zawisla_test
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_ROOT_HOST: "%"

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-

    - run:
        name: Install Dependencies
        command: |
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    - run:
        name: Remove mysql2 Gem
        command: bundle exec gem uninstall mysql2

    - run:
        name: Reinstall mysql2 Gem
        command: bundle install --jobs=3 --retry=3 --path vendor/bundle

    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    - run:
        name: Wait for Database
        command: dockerize -wait tcp://localhost:3306 -timeout 1m

    - run:
        name: Create Database
        command: bundle exec rake db:create

    - run:
        name: Load Database Schema
        command: bundle exec rake db:schema:load

    - run:
        name: Run Specs
        command: |
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          bundle exec rspec --format progress --profile 10 $TEST_FILES

  deploy:
    docker:
    - image: circleci/ruby:2.4-node-browsers
      environment:
        RAILS_ENV: test

    working_directory: ~/repo
    environment:
      HEROKU_APP: "pboksz/basia-zawisla"

    steps:
    - checkout

    - run:
        name: Setup Heroku
        command: bash .circleci/setup-heroku.sh

    - run:
        name: Deploy to Heroku
        command: git push heroku master

workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build
    - deploy:
        requires:
          - build
        filters:
          branches:
            only:
              - master
